apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: spice-runner-keda
  namespace: default
  labels:
    app: spice-runner
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: spice-runner
  
  # Scale from 1 to 150 pods (DEMO MODE - will trigger massive node scaling!)
  minReplicaCount: 1
  maxReplicaCount: 150
  
  # Polling and cooldown settings
  pollingInterval: 10           # Check metrics every 10 seconds (faster response)
  cooldownPeriod: 120           # Wait 2 minutes before scaling down (faster for demo)
  
  # Fallback configuration (if metrics are unavailable)
  fallback:
    failureThreshold: 3
    replicas: 2                 # Fallback to 2 replicas if metrics fail
  
  triggers:
  # ============================================================================
  # Trigger 1: HTTP Request Rate (Primary - Event-Driven Scaling)
  # ============================================================================
  - type: prometheus
    metadata:
      serverAddress: http://prometheus.observability.svc.cluster.local:9090
      metricName: http_requests_per_second
      query: |
        sum(rate(nginx_http_requests_total{service="spice-runner-nginx"}[1m])) or vector(0)
      threshold: '10'           # Scale up when > 10 requests/second (VERY aggressive for demo)
      activationThreshold: '1'  # Wake from zero at >= 1 request/second
      ignoreNullValues: 'true'  # Don't scale down if query returns null
  
  # ============================================================================
  # Trigger 2: CPU Utilization (Resource-Based Scaling)
  # ============================================================================
  - type: cpu
    metricType: Utilization     # Use percentage utilization
    metadata:
      value: '30'               # Scale up when average CPU > 30% (VERY aggressive for demo)
  
  # ============================================================================
  # Trigger 3: Memory Utilization (Resource-Based Scaling)
  # ============================================================================
  - type: memory
    metricType: Utilization     # Use percentage utilization
    metadata:
      value: '80'               # Scale up when average memory > 80%

---
# Optional: ScaledObject for more aggressive traffic-based scaling
# Uncomment this if you want separate scaling behavior for high-traffic scenarios
#
# apiVersion: keda.sh/v1alpha1
# kind: ScaledObject
# metadata:
#   name: spice-runner-keda-aggressive
#   namespace: default
# spec:
#   scaleTargetRef:
#     name: spice-runner
#   minReplicaCount: 2
#   maxReplicaCount: 20
#   pollingInterval: 10
#   cooldownPeriod: 60
#   triggers:
#   - type: prometheus
#     metadata:
#       serverAddress: http://prometheus.observability.svc.cluster.local:9090
#       query: |
#         sum(rate(nginx_http_requests_total{service="spice-runner-nginx"}[1m]))
#       threshold: '200'        # Higher threshold for burst scaling

